#Description:
Using the dataset car_sales, the code below creates an animated chart of the total revenue in euros generated by auto-manufacturers Volkswagen and BMW for the year 2023:

#Instructions:

(1) Download the .csv file called 'car_sales.csv' found on this github account.
(2) Open R Studio.
(3) Import the 'car_sales.csv' into R Studio.
(4) Copy paste code found below into R Studio.
(5) Ensure all the libraries mentioned at the beginning of the code.
(6) Run the code, and enjoy.

library(tidyverse)
library(lubridate)
library(gganimate)
library(dplyr)

# Convert Date
car_sales$Date <- mdy(car_sales$Date)

# Create a new month_date column (1st day of each month)
car_sales <- car_sales %>%
  mutate(
    Year = year(Date),
    month_date = floor_date(Date, "month"),
    `Price (€)` = `Price ($)` * 1.17
  ) %>%
  filter(
    Year == 2023,
    Company %in% c("Volkswagen", "BMW", "Mercedes")
  ) %>%
  group_by(month_date, Company) %>%
  summarise(tot_rev = sum(`Price (€)`), .groups = "drop") %>%
  arrange(Company, month_date)

# Create animated plot
p <- ggplot(car_sales, aes(x = month_date, y = tot_rev, color = Company)) +
  geom_line(size = 1) +
  labs(
    title = "Monthly Revenue in 2023",
    subtitle = "Month: {format(frame_along, '%B')}",
    x = "Month",
    y = "Total Revenue (€)",
    color = "Company"
  ) +
  theme_minimal() +
  transition_reveal(month_date) +
  ease_aes("linear")

# Animate
animate(p, nframes = 100, fps = 20, width = 900, height = 500, renderer = gifski_renderer())

#DELETE THIS HASGTAG, AND RUN CODE BELOW IF YOU WOULD LIKE TO SAVE THIS GIFF TO YOUR WORKING DIRECRORY. 
#anim <- animate(p, nframes = 100, fps = 20, width = 900, height = 500, renderer = gifski_renderer())
#anim_save("car_sales_animation.gif", animation = anim)

