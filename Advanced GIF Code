#Description: Another GIF I made, with more advanced coding that looks more professional.
# Load necessary libraries
library(tidyverse)
library(lubridate)
library(gganimate)
library(scales)
library(showtext)
library(ggthemes)
library(gifski)

# Load a modern Google font (optional, improves aesthetics)
font_add_google("Lato", "lato")
showtext_auto()

# Convert date
car_sales$Date <- mdy(car_sales$Date)

# Data transformation
car_sales_clean <- car_sales %>%
  mutate(
    Year = year(Date),
    month_date = floor_date(Date, "month"),
    `Price (€)` = `Price ($)` * 1.17
  ) %>%
  filter(
    Year == 2023,
    Company %in% c("Volkswagen", "BMW", "Mercedes")
  ) %>%
  group_by(month_date, Company) %>%
  summarise(tot_rev = sum(`Price (€)`), .groups = "drop") %>%
  arrange(Company, month_date)

# Create the animated plot
p <- ggplot(car_sales_clean, aes(x = month_date, y = tot_rev, color = Company)) +
  geom_line(size = 1.5) +
  geom_point(size = 3) +
  scale_y_continuous(labels = label_number(scale = 1e-6, suffix = "M €")) +
  scale_x_date(date_labels = "%b", date_breaks = "1 month") +
  scale_color_manual(values = c(
    "Volkswagen" = "#0072B2",
    "BMW" = "#E69F00",
    "Mercedes" = "#009E73"
  )) +
  labs(
    title = "Monthly Car Sales Revenue in 2023",
    subtitle = "Revenue in millions of euros — Month: {format(frame_along, '%B')}",
    x = "Month",
    y = "Total Revenue",
    color = "Company",
    caption = "Data Source: Internal Sales Data | Conversion: $ to € at 1.17"
  ) +
  theme_minimal(base_family = "lato") +
  theme(
    plot.title = element_text(size = 20, face = "bold"),
    plot.subtitle = element_text(size = 16, margin = margin(b = 10)),
    axis.text = element_text(size = 12),
    axis.title.x = element_text(size = 14, margin = margin(t = 10)),
    axis.title.y = element_text(size = 14, margin = margin(r = 20)),
    legend.position = "right",
    legend.title = element_text(face = "bold", size = 13),
    legend.text = element_text(size = 12),
    legend.spacing.x = unit(0.4, 'cm'),
    plot.caption = element_text(size = 10, color = "gray40")
  ) +
  transition_reveal(month_date) +
  ease_aes("cubic-in-out")

# Animate
animate(p, nframes = 100, fps = 20, width = 1000, height = 550, renderer = gifski_renderer())

# Optional: Save the animation
anim <- animate(p, nframes = 100, fps = 20, width = 1000, height = 550, renderer = gifski_renderer())
anim_save("advanced_car_sales_animation.gif", animation = anim)
